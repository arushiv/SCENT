library(parallel) #core parallelization.
library(methods) #S4 class OOP methods.
#Get functions and classes:
source("SCENTfunctions.R")
#Get functions and classes:
source("SCENTfunctions.R")
input_atac <- "./RData/Data/pbmc_multimodal.atac.rds"
input_mrna <- "./RData/Data/pbmc_multimodal.rna.rds"
input_meta <- "./RData/Data/pbmc_multimodal.meta.rds"
gene_peak <- "./RData/Data/qced_Tnk.G2P.txt"
celltype <- "Tnk"
output <- "./Testing/Output/test_output.txt"
num_cores <- 6
covariates <- "log(nUMI) + sample + batch"
options(stringsAsFactors = F)
atac <- readRDS(input_atac)
mrna <- readRDS(input_mrna)
meta <- readRDS(input_meta)
chunkinfo <- read.table(gene_peak)
colnames(chunkinfo) <- c("gene","peak")
####Using the SCENT Object:
SCENT_obj <- CreateSCENTObj(rna = mrna, atac = atac, meta.data = meta,
peak.info = gene_peak,
covariates = c("log(nCount_RNA)","percent.mito"),
celltypes = "newCT")
#Get functions and classes:
source("SCENTfunctions.R")
#Initialize directories: (Example)
input_atac <- "./RData/Data/pbmc_multimodal.atac.rds"
input_mrna <- "./RData/Data/pbmc_multimodal.rna.rds"
input_meta <- "./RData/Data/pbmc_multimodal.meta.rds"
input_gene_peak <- "./RData/Data/qced_Tnk.G2P.txt"
output <- "./Testing/Output/test_output.txt"
options(stringsAsFactors = F)
#Read-in Necessary Files:
atac <- readRDS(input_atac)
mrna <- readRDS(input_mrna)
meta <- readRDS(input_meta)
gene_peak <- read.table(input_gene_peak)
####Using the SCENT Object:
SCENT_obj <- CreateSCENTObj(rna = mrna, atac = atac, meta.data = meta,
peak.info = gene_peak,
covariates = c("log(nCount_RNA)","percent.mito"),
celltypes = "newCT")
####Using the SCENT Object:
SCENT_obj <- CreateSCENTObj(rna = mrna, atac = atac, meta.data = meta,
peak.info = gene_peak,
covariates = c("log(nCount_RNA)","percent.mito"),
celltypes = "newCT")
summary(SCENT_obj)
summary(SCENT_obj)
####Using the SCENT Object:
SCENT_obj <- CreateSCENTObj(rna = mrna, atac = atac, meta.data = meta,
peak.info = gene_peak,
covariates = c("log(nCount_RNA)","percent.mito"),
celltypes = "newCT")
SCENT_obj
####Using the SCENT Object:
SCENT_obj <- CreateSCENTObj(rna = mrna, atac = atac, meta.data = meta,
peak.info = gene_peak,
covariates = c("log(nCount_RNA)","percent.mito"),
celltypes = "newCT")
head(SCENT_obj@rna)
head(SCENT_obj@atac)
head(SCENT_obj@meta.data)
head(SCENT_obj@peak.info)
####Using the SCENT Object:
SCENT_obj <- CreateSCENTObj(rna = mrna, atac = atac, meta.data = meta,
peak.info = gene_peak,
covariates = c("log(nCount_RNA)","percent.mito"),
celltypes = "newCT")
head(SCENT_obj@rna@i)
head(SCENT_obj@atac)
head(SCENT_obj@meta.data)
head(SCENT_obj@peak.info)
####Using the SCENT Object:
SCENT_obj <- CreateSCENTObj(rna = mrna, atac = atac, meta.data = meta,
peak.info = gene_peak,
covariates = c("log(nCount_RNA)","percent.mito"),
celltypes = "newCT")
head(SCENT_obj@rna@i)
head(SCENT_obj@atac@i)
head(SCENT_obj@meta.data)
head(SCENT_obj@peak.info)
View(SCENT_obj)
####Using the SCENT Object:
SCENT_obj <- CreateSCENTObj(rna = mrna, atac = atac, meta.data = meta,
peak.info = gene_peak,
covariates = c("log(nCount_RNA)","percent.mito"),
celltypes = "newCT")
head(as.data.frame(SCENT_obj@rna))
####Using the SCENT Object:
SCENT_obj <- CreateSCENTObj(rna = mrna, atac = atac, meta.data = meta,
peak.info = gene_peak,
covariates = c("log(nCount_RNA)","percent.mito"),
celltypes = "newCT")
head(SCENT_obj@rna[1:10,1:10])
head(SCENT_obj@atac@i)
head(SCENT_obj@meta.data)
head(SCENT_obj@peak.info)
####Using the SCENT Object:
SCENT_obj <- CreateSCENTObj(rna = mrna, atac = atac, meta.data = meta,
peak.info = gene_peak,
covariates = c("log(nCount_RNA)","percent.mito"),
celltypes = "newCT")
head(SCENT_obj@rna[1:10,1:2])
head(SCENT_obj@atac[1:10,1:2])
head(SCENT_obj@meta.data)
head(SCENT_obj@peak.info)
####Using the SCENT Object:
SCENT_obj <- CreateSCENTObj(rna = mrna, atac = atac, meta.data = meta,
peak.info = gene_peak,
covariates = c("log(nCount_RNA)","percent.mito"),
celltypes = "newCT")
head(SCENT_obj@rna[10:15,1:2])
head(SCENT_obj@atac[10:15,1:2])
head(SCENT_obj@meta.data)
head(SCENT_obj@peak.info)
#Of the set of peak gene pairs: pick a set of pairs to test:
#Example: (first 10 gene-peak pairs)
SCENT_obj@peak.info <- SCENT_obj@peak.info[1:10,]
#Of the set of peak gene pairs: pick a set of pairs to test:
#Example: (first 10 gene-peak pairs)
SCENT_obj@peak.info <- SCENT_obj@peak.info[1:10,]
head(SCENT_obj@peak.info)
#Get functions and classes:
source("SCENTfunctions.R")
#Initialize directories: (Example)
input_atac <- "./RData/Data/pbmc_multimodal.atac.rds"
input_mrna <- "./RData/Data/pbmc_multimodal.rna.rds"
input_meta <- "./RData/Data/pbmc_multimodal.meta.rds"
input_gene_peak <- "./RData/Data/qced_Tnk.G2P.txt"
output <- "./Testing/Output/test_output.txt"
options(stringsAsFactors = F)
#Read-in Necessary Files:
atac <- readRDS(input_atac)
mrna <- readRDS(input_mrna)
meta <- readRDS(input_meta)
gene_peak <- read.table(input_gene_peak)
colnames(gene_peak) <- c("gene","peak")
##Using the SCENT Object:
SCENT_obj <- CreateSCENTObj(rna = mrna, atac = atac, meta.data = meta,
peak.info = gene_peak,
covariates = c("log(nCount_RNA)","percent.mito"),
celltypes = "newCT")
##Example Outputs of the SCENT Object
head(SCENT_obj@rna[1:10,1:2])
head(SCENT_obj@atac[1:10,1:2])
head(SCENT_obj@meta.data)
head(SCENT_obj@peak.info)
#Of the set of peak gene pairs: pick a set of pairs to test:
#Example: (first 10 gene-peak pairs)
SCENT_obj@peak.info <- SCENT_obj@peak.info[1:10,]
head(SCENT_obj@peak.info)
#Run SCENT algorithm of Tnk cell type and use 6 cores for parallelization:
SCENT_obj <- SCENT_algorithm(SCENT_obj, "Tnk", 6)
head(SCENT_obj@SCENT.result)
unlink("SCENT_vignette_cache", recursive = TRUE)
#Libraries to Load:
library(data.table)
library(lme4)
library(stringr)
library(boot)
library(MASS)
library(Matrix)
library(parallel) #core parallelization.
library(methods) #S4 class OOP methods.
#Get functions and classes:
source("SCENTfunctions.R")
#Initialize directories: (Example)
input_atac <- "./RData/Data/pbmc_multimodal.atac.rds"
input_mrna <- "./RData/Data/pbmc_multimodal.rna.rds"
input_meta <- "./RData/Data/pbmc_multimodal.meta.rds"
input_gene_peak <- "./RData/Data/qced_Tnk.G2P.txt"
output <- "./Testing/Output/test_output.txt"
options(stringsAsFactors = F)
#Read-in Necessary Files:
atac <- readRDS(input_atac)
mrna <- readRDS(input_mrna)
meta <- readRDS(input_meta)
gene_peak <- read.table(input_gene_peak)
#####1st way######
library(data.table)
library(Matrix)
library(stringr)
library(Hmisc)
# bedtools should also be in the path to run this
####Using the SCENT Object:
SCENT_obj <- CreateSCENTObj(rna = mrna, atac = atac, meta.data = meta,
covariates = c("log(nCount_RNA)","percent.mito"),
celltypes = "newCT")
SCENT_obj <- CreateSCENTObj(rna = mrna, atac = atac, meta.data = meta,
peak.info = gene_peak,
covariates = c("log(nCount_RNA)","percent.mito"),
celltypes = "newCT")
slot(SCENT_obj, "peak.info")
.hasSlot(SCENT_obj, "peak.info")
View(SCENT_obj)
.hasSlot(SCENT_obj, "SCENT.result")
length(SCENT_obj@SCENT.result)
#Libraries to Load:
library(data.table)
library(lme4)
library(stringr)
library(boot)
library(MASS)
library(Matrix)
library(parallel) #core parallelization.
library(methods) #S4 class OOP methods.
#Get functions and classes:
source("SCENTfunctions.R")
#Initialize directories: (Example)
input_atac <- "./RData/Data/pbmc_multimodal.atac.rds"
input_mrna <- "./RData/Data/pbmc_multimodal.rna.rds"
input_meta <- "./RData/Data/pbmc_multimodal.meta.rds"
input_gene_peak <- "./RData/Data/qced_Tnk.G2P.txt"
output <- "./Testing/Output/test_output.txt"
options(stringsAsFactors = F)
#Read-in Necessary Files:
atac <- readRDS(input_atac)
mrna <- readRDS(input_mrna)
meta <- readRDS(input_meta)
gene_peak <- read.table(input_gene_peak)
#####1st way######
library(data.table)
library(Matrix)
library(stringr)
library(Hmisc)
# bedtools should also be in the path to run this
####Using the SCENT Object:
SCENT_obj <- CreateSCENTObj(rna = mrna, atac = atac, meta.data = meta,
peak.info = gene_peak,
covariates = c("log(nCount_RNA)","percent.mito"),
celltypes = "newCT")
SCENT_obj <- CreateSCENTObj(rna = mrna, atac = atac, meta.data = meta,
covariates = c("log(nCount_RNA)","percent.mito"),
celltypes = "newCT")
View(SCENT_obj)
SCENT_obj <- CreatePeakToGeneList(SCENT_obj, genebed = genebed_loc,
nbatch = 10,tmpfile="./temporary_atac_peak.bed",
intersectedfile="./temporary_atac_peak_intersected.bed.gz")
genebed_loc <- "./RData/Data/GeneBody_500kb_margin_chr.bed" # path to the file which we will place in the github
SCENT_obj <- CreatePeakToGeneList(SCENT_obj, genebed = genebed_loc,
nbatch = 10,tmpfile="./temporary_atac_peak.bed",
intersectedfile="./temporary_atac_peak_intersected.bed.gz")
SCENT_obj <- CreatePeakToGeneList(SCENT_obj, genebed = genebed_loc,
nbatch = 10,tmpfile="./temporary_atac_peak.bed",
intersectedfile="./temporary_atac_peak_intersected.bed.gz")
View(SCENT_obj)
#Libraries to Load:
library(data.table)
library(lme4)
library(stringr)
library(boot)
library(MASS)
library(Matrix)
library(parallel) #core parallelization.
library(methods) #S4 class OOP methods.
#Get functions and classes:
source("SCENTfunctions.R")
#Initialize directories: (Example)
input_atac <- "./RData/Data/pbmc_multimodal.atac.rds"
input_mrna <- "./RData/Data/pbmc_multimodal.rna.rds"
input_meta <- "./RData/Data/pbmc_multimodal.meta.rds"
input_gene_peak <- "./RData/Data/qced_Tnk.G2P.txt"
output <- "./Testing/Output/test_output.txt"
options(stringsAsFactors = F)
#Read-in Necessary Files:
atac <- readRDS(input_atac)
mrna <- readRDS(input_mrna)
meta <- readRDS(input_meta)
gene_peak <- read.table(input_gene_peak)
#####1st way######
library(data.table)
library(Matrix)
library(stringr)
library(Hmisc)
library(R.utils)
# bedtools should also be in the path to run this
####Using the SCENT Object:
SCENT_obj <- CreateSCENTObj(rna = mrna, atac = atac, meta.data = meta,
covariates = c("log(nCount_RNA)","percent.mito"),
celltypes = "newCT")
genebed_loc <- "./RData/Data/GeneBody_500kb_margin_chr.bed" # path to the file which we will place in the github
SCENT_obj <- CreatePeakToGeneList(SCENT_obj, genebed = genebed_loc,
nbatch = 10,tmpfile="./temporary_atac_peak.bed",
intersectedfile="./temporary_atac_peak_intersected.bed.gz")
View(SCENT_obj)
SCENT_obj@peak.info[["  91633"]]
SCENT_obj <- CreatePeakToGeneList(SCENT_obj, genebed = genebed_loc,
nbatch = 10,tmpfile="./temporary_atac_peak.bed",
intersectedfile="./temporary_atac_peak_intersected.bed.gz")
source("SCENTfunctions.R")
SCENT_obj <- CreatePeakToGeneList(SCENT_obj, genebed = genebed_loc,
nbatch = 10,tmpfile="./temporary_atac_peak.bed",
intersectedfile="./temporary_atac_peak_intersected.bed.gz")
View(SCENT_obj)
#Libraries to Load:
library(data.table)
library(lme4)
library(stringr)
library(boot)
library(MASS)
library(Matrix)
library(parallel) #core parallelization.
library(methods) #S4 class OOP methods.
#Get functions and classes:
source("SCENTfunctions.R")
#Initialize directories: (Example)
input_atac <- "./RData/Data/pbmc_multimodal.atac.rds"
input_mrna <- "./RData/Data/pbmc_multimodal.rna.rds"
input_meta <- "./RData/Data/pbmc_multimodal.meta.rds"
input_gene_peak <- "./RData/Data/qced_Tnk.G2P.txt"
output <- "./Testing/Output/test_output.txt"
options(stringsAsFactors = F)
#Read-in Necessary Files:
atac <- readRDS(input_atac)
mrna <- readRDS(input_mrna)
meta <- readRDS(input_meta)
gene_peak <- read.table(input_gene_peak)
View(gene_peak)
View(gene_peak)
SCENT_obj <- CreatePeakToGeneList(SCENT_obj, genebed = genebed_loc,
nbatch = 10,tmpfile="./temporary_atac_peak.bed",
intersectedfile="./temporary_atac_peak_intersected.bed.gz")
View(SCENT_obj)
SCENT_obj@peak.info[["  91633"]]
source("SCENTfunctions.R")
SCENT_obj <- CreatePeakToGeneList(SCENT_obj, genebed = genebed_loc,
nbatch = 10,tmpfile="./temporary_atac_peak.bed",
intersectedfile="./temporary_atac_peak_intersected.bed.gz")
View(SCENT_obj)
SCENT_obj <- CreatePeakToGeneList(SCENT_obj, genebed = genebed_loc,
nbatch = 1000,tmpfile="./temporary_atac_peak.bed",
intersectedfile="./temporary_atac_peak_intersected.bed.gz")
View(SCENT_obj)
SCENT_obj@peak.info[["    917.0"]]
#Libraries to Load:
library(data.table)
library(lme4)
library(stringr)
library(boot)
library(MASS)
library(Matrix)
library(parallel) #core parallelization.
library(methods) #S4 class OOP methods.
#Get functions and classes:
source("SCENTfunctions.R")
#Initialize directories: (Example)
input_atac <- "./RData/Data/pbmc_multimodal.atac.rds"
input_mrna <- "./RData/Data/pbmc_multimodal.rna.rds"
input_meta <- "./RData/Data/pbmc_multimodal.meta.rds"
input_gene_peak <- "./RData/Data/qced_Tnk.G2P.txt"
output <- "./Testing/Output/test_output.txt"
options(stringsAsFactors = F)
#Read-in Necessary Files:
atac <- readRDS(input_atac)
mrna <- readRDS(input_mrna)
meta <- readRDS(input_meta)
gene_peak <- read.table(input_gene_peak)
#####1st way######
library(data.table)
library(Matrix)
library(stringr)
library(Hmisc)
library(R.utils)
# bedtools should also be in the path to run this
####Using the SCENT Object:
SCENT_obj <- CreateSCENTObj(rna = mrna, atac = atac, meta.data = meta,
covariates = c("log(nCount_RNA)","percent.mito"),
celltypes = "newCT")
genebed_loc <- "./RData/Data/GeneBody_500kb_margin_chr.bed" # path to the file which we will place in the github
SCENT_obj <- CreatePeakToGeneList(SCENT_obj, genebed = genebed_loc,
nbatch = 1000,tmpfile="./temporary_atac_peak.bed",
intersectedfile="./temporary_atac_peak_intersected.bed.gz")
View(SCENT_obj)
#How to deal with differences in types for peak.info.
SCENT_obj2 <- SCENT_obj
View(SCENT_obj2)
SCENT_obj2 <- SCENT_obj2@peak.info$1001544.0
SCENT_obj2 <- SCENT_obj2@peak.info[["1001544.0"]]
View(SCENT_obj2)
SCENT_obj2 <- SCENT_obj
SCENT_obj2@peak.info <- SCENT_obj2@peak.info[["1001544.0"]]
View(SCENT_obj2)
View(SCENT_obj)
SCENT_obj <- CreatePeakToGeneList(SCENT_obj, genebed = genebed_loc,
nbatch = 1000,tmpfile="./temporary_atac_peak.bed",
intersectedfile="./temporary_atac_peak_intersected.bed.gz")
View(SCENT_obj)
#Get functions and classes:
source("SCENTfunctions.R")
SCENT_obj <- CreatePeakToGeneList(SCENT_obj, genebed = genebed_loc,
nbatch = 1000,tmpfile="./temporary_atac_peak.bed",
intersectedfile="./temporary_atac_peak_intersected.bed.gz")
source("SCENTfunctions.R")
SCENT_obj <- CreatePeakToGeneList(SCENT_obj, genebed = genebed_loc,
nbatch = 1000,tmpfile="./temporary_atac_peak.bed",
intersectedfile="./temporary_atac_peak_intersected.bed.gz")
View(SCENT_obj)
str(SCENT_obj)
str(SCENT_obj, max.level = 1)
str(SCENT_obj, max.level = 2)
str(SCENT_obj, max.level = 3)
str(SCENT_obj, max.level = 2)
str(SCENT_obj, max.level = 2)
View(SCENT_obj)
saveRDS(SCENT_obj, file = "./Testing/Output/SCENT_obj.rds", quote=F, row=F, sep="\t")
saveRDS(SCENT_obj, file = "./Testing/Output/SCENT_obj.rds")
gc()
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
#Libraries to Load:
library(data.table)
library(lme4)
library(stringr)
library(boot)
library(MASS)
library(Matrix)
library(parallel) #core parallelization.
library(methods) #S4 class OOP methods.
library(Hmisc)
library(R.utils)
# bedtools should also be in the path to run this
#Libraries to Load:
library(data.table)
library(lme4)
library(stringr)
library(boot)
library(MASS)
library(Matrix)
library(parallel) #core parallelization.
library(methods) #S4 class OOP methods.
library(Hmisc)
library(R.utils)
# bedtools should also be in the path to run this
#Get functions and classes:
source("SCENTfunctions.R")
#Initialize directories: (Example)
input_atac <- "./RData/Data/pbmc_multimodal.atac.rds"
input_mrna <- "./RData/Data/pbmc_multimodal.rna.rds"
input_meta <- "./RData/Data/pbmc_multimodal.meta.rds"
input_gene_peak <- "./RData/Data/qced_Tnk.G2P.txt"
output_rds <- "./Testing/Output/SCENT_obj.rds"
####Obtaining Gene-Peak Pairs using defined bed file
genebed_loc <- "./RData/Data/GeneBody_500kb_margin_chr.bed"
options(stringsAsFactors = F)
#Read-in Necessary Files:
atac <- readRDS(input_atac)
mrna <- readRDS(input_mrna)
meta <- readRDS(input_meta)
gene_peak <- read.table(input_gene_peak)
colnames(gene_peak) <- c("gene","peak")
####Using the SCENT Object:
SCENT_obj <- CreateSCENTObj(rna = mrna, atac = atac, meta.data = meta,
covariates = c("log(nCount_RNA)","percent.mito"),
celltypes = "newCT")
str(SCENT_obj)
SCENT_obj <- CreatePeakToGeneList(SCENT_obj, genebed = genebed_loc,
nbatch = 1000,tmpfile="./temporary_atac_peak.bed",
intersectedfile="./temporary_atac_peak_intersected.bed.gz")
str(SCENT_obj, max.level = 2)
saveRDS(SCENT_obj, file = output_rds) #Takes a couple minutes.
#Libraries to Load:
library(data.table)
library(lme4)
library(stringr)
library(boot)
library(MASS)
library(Matrix)
library(parallel) #core parallelization.
library(methods) #S4 class OOP methods.
#Get functions and classes:
source("SCENTfunctions.R")
####### INPUTS
###Probably need:
# JOB ARRAY number: node usage
# Number of Cores
# CellType
# RDS object file type
# Output of each text file to a specific folder
#Obtain arguments: (from Cluster)
args = commandArgs(trailingOnly = T)
print(paste("JOB ARRAY NUMBER", as.numeric(args[1])))
node = as.numeric(args[1])
node <- 1
cores <- 6
celltype <- "Tnk"
SCENTobj_rds <- "./Testing/Output/SCENT_obj.rds"
output_dir <- "./Testing/Output/"
#### Load:
SCENT_obj <- readRDS(SCENTobj_rds)
#### Get the corresponding dataframe from the list:
SCENT_obj$peak.info <- SCENT_obj2@peak.info[[node]]
#### Get the corresponding dataframe from the list:
SCENT_obj$peak.info <- SCENT_obj@peak.info[[node]]
SCENT_obj@peak.info[[node]]
SCENT_obj@peak.info <- SCENT_obj@peak.info[[node]]
View(SCENT_obj)
#### Run SCENT algorithm of Tnk cell type and use 6 cores for parallelization:
SCENT_obj <- SCENT_algorithm(SCENT_obj, celltype, cores)
View(SCENT_obj)
#### Output SCENT results for each gene-peak pair block.
filename <- paste0(output_dir,"SCENTresult_",node,".txt")
write.table(SCENT_obj@SCENT.result, file = filename, row.names = F, col.names = T)
SCENT_obj@peak.info[[node]][1:3,]
SCENT_obj@peak.info[[node]][1:3]
SCENT_obj@peak.info[[node]][1:3,]
SCENT_obj@peak.info <- SCENT_obj@peak.info[[node]]
View(SCENT_obj)
gc()
