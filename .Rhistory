library(data.table)
library(lme4)
library(stringr)
library(boot)
library(MASS)
library(Matrix)
library(parallel) #core parallelization.
library(methods) #S4 class OOP methods.
source(SCENTfunctions_upd.R)
library(data.table)
library(lme4)
library(stringr)
library(boot)
library(MASS)
library(Matrix)
library(parallel) #core parallelization.
library(methods) #S4 class OOP methods.
source(SCENTfunctions_upd.R)
library(data.table)
library(lme4)
library(stringr)
library(boot)
library(MASS)
library(Matrix)
library(parallel) #core parallelization.
library(methods) #S4 class OOP methods.
#Get functions and classes:
source("SCENTfunctions_upd.R")
#Get functions and classes:
source("./SCENTfunctions_upd.R")
library(data.table)
library(lme4)
library(stringr)
library(boot)
library(MASS)
library(Matrix)
library(parallel) #core parallelization.
library(methods) #S4 class OOP methods.
#Get functions and classes:
source("SCENTfunctions_upd.R")
library(data.table)
library(data.table)
library(lme4)
library(stringr)
library(boot)
library(MASS)
library(Matrix)
library(parallel) #core parallelization.
library(methods) #S4 class OOP methods.
#Get functions and classes:
source("SCENTfunctions_update.R")
source("~/Documents/GitHub/SCENT_Upd/SCENTexample_upd.R")
knitr::opts_chunk$set(echo = TRUE)
#Libraries to Load:
library(data.table)
library(lme4)
library(stringr)
library(boot)
library(MASS)
library(Matrix)
library(parallel) #core parallelization.
library(methods) #S4 class OOP methods.
#Libraries to Load:
library(data.table)
library(lme4)
library(stringr)
library(boot)
library(MASS)
library(Matrix)
library(parallel) #core parallelization.
library(methods) #S4 class OOP methods.
#Get functions and classes:
source("SCENTfunctions.R")
#Get functions and classes:
source("SCENTfunctions.R")
input_atac <- "./RData/Data/pbmc_multimodal.atac.rds"
input_mrna <- "./RData/Data/pbmc_multimodal.rna.rds"
input_meta <- "./RData/Data/pbmc_multimodal.meta.rds"
gene_peak <- "./RData/Data/qced_Tnk.G2P.txt"
celltype <- "Tnk"
output <- "./Testing/Output/test_output.txt"
num_cores <- 6
covariates <- "log(nUMI) + sample + batch"
options(stringsAsFactors = F)
atac <- readRDS(input_atac)
mrna <- readRDS(input_mrna)
meta <- readRDS(input_meta)
chunkinfo <- read.table(gene_peak)
colnames(chunkinfo) <- c("gene","peak")
####Using the SCENT Object:
SCENT_obj <- CreateSCENTObj(rna = mrna, atac = atac, meta.data = meta,
peak.info = gene_peak,
covariates = c("log(nCount_RNA)","percent.mito"),
celltypes = "newCT")
#Get functions and classes:
source("SCENTfunctions.R")
#Initialize directories: (Example)
input_atac <- "./RData/Data/pbmc_multimodal.atac.rds"
input_mrna <- "./RData/Data/pbmc_multimodal.rna.rds"
input_meta <- "./RData/Data/pbmc_multimodal.meta.rds"
input_gene_peak <- "./RData/Data/qced_Tnk.G2P.txt"
output <- "./Testing/Output/test_output.txt"
options(stringsAsFactors = F)
#Read-in Necessary Files:
atac <- readRDS(input_atac)
mrna <- readRDS(input_mrna)
meta <- readRDS(input_meta)
gene_peak <- read.table(input_gene_peak)
####Using the SCENT Object:
SCENT_obj <- CreateSCENTObj(rna = mrna, atac = atac, meta.data = meta,
peak.info = gene_peak,
covariates = c("log(nCount_RNA)","percent.mito"),
celltypes = "newCT")
####Using the SCENT Object:
SCENT_obj <- CreateSCENTObj(rna = mrna, atac = atac, meta.data = meta,
peak.info = gene_peak,
covariates = c("log(nCount_RNA)","percent.mito"),
celltypes = "newCT")
summary(SCENT_obj)
summary(SCENT_obj)
####Using the SCENT Object:
SCENT_obj <- CreateSCENTObj(rna = mrna, atac = atac, meta.data = meta,
peak.info = gene_peak,
covariates = c("log(nCount_RNA)","percent.mito"),
celltypes = "newCT")
SCENT_obj
####Using the SCENT Object:
SCENT_obj <- CreateSCENTObj(rna = mrna, atac = atac, meta.data = meta,
peak.info = gene_peak,
covariates = c("log(nCount_RNA)","percent.mito"),
celltypes = "newCT")
head(SCENT_obj@rna)
head(SCENT_obj@atac)
head(SCENT_obj@meta.data)
head(SCENT_obj@peak.info)
####Using the SCENT Object:
SCENT_obj <- CreateSCENTObj(rna = mrna, atac = atac, meta.data = meta,
peak.info = gene_peak,
covariates = c("log(nCount_RNA)","percent.mito"),
celltypes = "newCT")
head(SCENT_obj@rna@i)
head(SCENT_obj@atac)
head(SCENT_obj@meta.data)
head(SCENT_obj@peak.info)
####Using the SCENT Object:
SCENT_obj <- CreateSCENTObj(rna = mrna, atac = atac, meta.data = meta,
peak.info = gene_peak,
covariates = c("log(nCount_RNA)","percent.mito"),
celltypes = "newCT")
head(SCENT_obj@rna@i)
head(SCENT_obj@atac@i)
head(SCENT_obj@meta.data)
head(SCENT_obj@peak.info)
View(SCENT_obj)
####Using the SCENT Object:
SCENT_obj <- CreateSCENTObj(rna = mrna, atac = atac, meta.data = meta,
peak.info = gene_peak,
covariates = c("log(nCount_RNA)","percent.mito"),
celltypes = "newCT")
head(as.data.frame(SCENT_obj@rna))
####Using the SCENT Object:
SCENT_obj <- CreateSCENTObj(rna = mrna, atac = atac, meta.data = meta,
peak.info = gene_peak,
covariates = c("log(nCount_RNA)","percent.mito"),
celltypes = "newCT")
head(SCENT_obj@rna[1:10,1:10])
head(SCENT_obj@atac@i)
head(SCENT_obj@meta.data)
head(SCENT_obj@peak.info)
####Using the SCENT Object:
SCENT_obj <- CreateSCENTObj(rna = mrna, atac = atac, meta.data = meta,
peak.info = gene_peak,
covariates = c("log(nCount_RNA)","percent.mito"),
celltypes = "newCT")
head(SCENT_obj@rna[1:10,1:2])
head(SCENT_obj@atac[1:10,1:2])
head(SCENT_obj@meta.data)
head(SCENT_obj@peak.info)
####Using the SCENT Object:
SCENT_obj <- CreateSCENTObj(rna = mrna, atac = atac, meta.data = meta,
peak.info = gene_peak,
covariates = c("log(nCount_RNA)","percent.mito"),
celltypes = "newCT")
head(SCENT_obj@rna[10:15,1:2])
head(SCENT_obj@atac[10:15,1:2])
head(SCENT_obj@meta.data)
head(SCENT_obj@peak.info)
#Of the set of peak gene pairs: pick a set of pairs to test:
#Example: (first 10 gene-peak pairs)
SCENT_obj@peak.info <- SCENT_obj@peak.info[1:10,]
#Of the set of peak gene pairs: pick a set of pairs to test:
#Example: (first 10 gene-peak pairs)
SCENT_obj@peak.info <- SCENT_obj@peak.info[1:10,]
head(SCENT_obj@peak.info)
#Get functions and classes:
source("SCENTfunctions.R")
#Initialize directories: (Example)
input_atac <- "./RData/Data/pbmc_multimodal.atac.rds"
input_mrna <- "./RData/Data/pbmc_multimodal.rna.rds"
input_meta <- "./RData/Data/pbmc_multimodal.meta.rds"
input_gene_peak <- "./RData/Data/qced_Tnk.G2P.txt"
output <- "./Testing/Output/test_output.txt"
options(stringsAsFactors = F)
#Read-in Necessary Files:
atac <- readRDS(input_atac)
mrna <- readRDS(input_mrna)
meta <- readRDS(input_meta)
gene_peak <- read.table(input_gene_peak)
colnames(gene_peak) <- c("gene","peak")
##Using the SCENT Object:
SCENT_obj <- CreateSCENTObj(rna = mrna, atac = atac, meta.data = meta,
peak.info = gene_peak,
covariates = c("log(nCount_RNA)","percent.mito"),
celltypes = "newCT")
##Example Outputs of the SCENT Object
head(SCENT_obj@rna[1:10,1:2])
head(SCENT_obj@atac[1:10,1:2])
head(SCENT_obj@meta.data)
head(SCENT_obj@peak.info)
#Of the set of peak gene pairs: pick a set of pairs to test:
#Example: (first 10 gene-peak pairs)
SCENT_obj@peak.info <- SCENT_obj@peak.info[1:10,]
head(SCENT_obj@peak.info)
#Run SCENT algorithm of Tnk cell type and use 6 cores for parallelization:
SCENT_obj <- SCENT_algorithm(SCENT_obj, "Tnk", 6)
head(SCENT_obj@SCENT.result)
unlink("SCENT_vignette_cache", recursive = TRUE)
